<Activity mc:Ignorable="sap sap2010" x:Class="SendEmails" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_SystemException" Type="InArgument(s:Exception)" />
    <x:Property Name="io_Config" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1069,2123</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SendEmails_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="62">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Activities.Utils</x:String>
      <x:String>UiPath.Mail.Activities.Business.HtmlEditor</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Send Status Emails" sap:VirtualizedContainerService.HintSize="755,2058" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Emails" />
      <Variable x:TypeArguments="x:String" Name="EmailString" />
      <Variable x:TypeArguments="x:String" Name="dt_Maindata" />
      <Variable x:TypeArguments="x:Boolean" Name="boolFileExist" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message Send Status Emails Started" sap:VirtualizedContainerService.HintSize="713,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Sending Status Emails - Started&quot;]" />
    <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Read Bot Runner Email from file" sap:VirtualizedContainerService.HintSize="713,168" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[io_Config(&quot;Email_FilePath&quot;).ToString]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <ui:ExcelReadRange AddHeaders="False" DataTable="[dt_Emails]" DisplayName="Read Range Read Emails from Excel" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" SheetName="[If(in_SystemException is Nothing, &quot;Emails&quot;,&quot;Error&quot;)]">
            <ui:ExcelReadRange.Range>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </ui:ExcelReadRange.Range>
          </ui:ExcelReadRange>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <Assign DisplayName="Assign Emails to Email String" sap:VirtualizedContainerService.HintSize="713,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[EmailString]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[String.Join(";",(From row In dt_Emails.AsEnumerable() Select row.Field(Of String)(0)).ToList())]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message Send Status Emails Started" sap:VirtualizedContainerService.HintSize="713,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Trace" Message="[&quot;Begin sending email&quot;]" />
    <ui:FileExistsX DisplayName="Check if PIV Applicant File Exists" Exists="[boolFileExist]" sap:VirtualizedContainerService.HintSize="713,132" sap2010:WorkflowViewState.IdRef="FileExistsX_1" Path="[io_Config(&quot;MainDataPath&quot;).ToString]" />
    <If Condition="[boolFileExist]" DisplayName="Check  if  PIV Applicant file exist" sap:VirtualizedContainerService.HintSize="713,454" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Hello Team,&quot;+&#xA;Environment.NewLine+&#xA;Environment.NewLine+&#xA;If(in_SystemException Is Nothing, io_Config(&quot;StatusCompletionEmailMessage&quot;).ToString.&#xA;Replace(&quot;[DateRun]&quot;, Convert.ToDateTime(System.DateTime.Today).ToString(&quot;MM/dd/yyyy&quot;)).&#xA;Replace(&quot;[Time]&quot;, Convert.ToDateTime(datetime.Now.ToString).ToString(&quot;hh:mm&quot;)),&#xA;If(in_SystemException.Message.Contains(&quot;Stage Workflow: GETEMAILINFO&quot;) ,io_Config(&quot;StatusFailEmailMessage&quot;).ToString,&#xA;If(in_SystemException.Message.Contains(&quot;Stage Workflow: EUAPROCESS&quot;) ,io_Config(&quot;StatusFailEmailMessage&quot;).ToString,&#xA;If(in_SystemException.Message.Contains(&quot;Stage Workflow: SENDPIVEMAIL&quot;) ,io_Config(&quot;StatusFailEmailMessage&quot;).ToString,&#xA;If(in_SystemException.Message.Contains(&quot;Stage Workflow: STATUSEMAIL&quot;) ,io_Config(&quot;StatusFailEmailMessage&quot;).ToString,&#xA;&quot;&quot;)))))+&#xA;Environment.NewLine+&#xA;Environment.NewLine+&#xA;&quot;Best Regards,&quot;+&#xA;Environment.NewLine+&#xA;Environment.NewLine+&#xA;&quot;PIV Locator Bot&quot;]" DisplayName="Send Outlook Mail Message_PIV with attachment" sap:VirtualizedContainerService.HintSize="334,296" sap2010:WorkflowViewState.IdRef="SendOutlookMail_3" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[If( in_SystemException is Nothing, io_Config(&quot;StatusEmailSubject&quot;).ToString,io_Config(&quot;StatusEmailSubject&quot;).ToString.Replace(&quot;Complete&quot;,&quot;Incomplete&quot;))+&quot; &quot;+Convert.ToDateTime(System.DateTime.Today).ToString(&quot;MM/dd/yyyy&quot;)]" To="[EmailString]">
          <ui:SendOutlookMail.Files>
            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
              <InArgument x:TypeArguments="x:String">[io_Config("MainDataPath").ToString]</InArgument>
            </scg:List>
          </ui:SendOutlookMail.Files>
        </ui:SendOutlookMail>
      </If.Then>
      <If.Else>
        <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Hello Team,&quot;+&#xA;Environment.NewLine+&#xA;Environment.NewLine+&#xA;If(in_SystemException Is Nothing, io_Config(&quot;StatusCompletionEmailMessageNoCase&quot;).ToString.&#xA;Replace(&quot;[DateRun]&quot;, Convert.ToDateTime(System.DateTime.Today).ToString(&quot;MM/dd/yyyy&quot;)).&#xA;Replace(&quot;[Time]&quot;, Convert.ToDateTime(datetime.Now.ToString).ToString(&quot;hh:mm&quot;)),&#xA;If(in_SystemException.Message.Contains(&quot;Stage Workflow: GETEMAILINFO&quot;) ,io_Config(&quot;StatusFailEmailMessage&quot;).ToString,&#xA;If(in_SystemException.Message.Contains(&quot;Stage Workflow: EUAPROCESS&quot;) ,io_Config(&quot;StatusFailEmailMessage&quot;).ToString,&#xA;If(in_SystemException.Message.Contains(&quot;Stage Workflow: SENDPIVEMAIL&quot;) ,io_Config(&quot;StatusFailEmailMessage&quot;).ToString,&#xA;If(in_SystemException.Message.Contains(&quot;Stage Workflow: STATUSEMAIL&quot;) ,io_Config(&quot;StatusFailEmailMessage&quot;).ToString,&#xA;&quot;&quot;)))))+&#xA;Environment.NewLine+&#xA;Environment.NewLine+&#xA;&quot;Best Regards,&quot;+&#xA;Environment.NewLine+&#xA;Environment.NewLine+&#xA;&quot;PIV Locator Bot&quot;]" DisplayName="Send Outlook Mail Message_PIV - no attachment" sap:VirtualizedContainerService.HintSize="334,296" sap2010:WorkflowViewState.IdRef="SendOutlookMail_4" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[If( in_SystemException is Nothing, io_Config(&quot;StatusEmailSubject&quot;).ToString,io_Config(&quot;StatusEmailSubject&quot;).ToString.Replace(&quot;Complete&quot;,&quot;Incomplete&quot;))+&quot; &quot;+Convert.ToDateTime(System.DateTime.Today).ToString(&quot;MM/dd/yyyy&quot;)]" To="[EmailString]">
          <ui:SendOutlookMail.Files>
            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
          </ui:SendOutlookMail.Files>
        </ui:SendOutlookMail>
      </If.Else>
    </If>
    <If Condition="[in_SystemException is Nothing]" DisplayName="If System Exception is Nothing Change Stage" sap:VirtualizedContainerService.HintSize="713,599" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <TryCatch sap2010:Annotation.AnnotationText="Confirms whether or not the CLEANUP was processed" DisplayName="Try Stage Confirmation CLEAN" sap:VirtualizedContainerService.HintSize="438,412" sap2010:WorkflowViewState.IdRef="TryCatch_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch.Try>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Confirms the Stage which the bot is supposed to start from in case of Crashes" DisplayName="Stage Confirmation CLEAN" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Process\StageConfirmation.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_ConfigPath">[io_Config("ConfigPath").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="Stage">CLEAN</InArgument>
                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_Config">[io_Config]</InOutArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Failed to Confirm CLEAN" sap:VirtualizedContainerService.HintSize="480,776" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message Failed to Confirm CLEAN" sap:VirtualizedContainerService.HintSize="438,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Error" Message="[&quot;Failed to confirm CLEAN: &quot;+exception.Message+&quot; At source: &quot;+exception.Source]" />
                  <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process Excel CLEAN" sap:VirtualizedContainerService.HintSize="438,132" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="excel" />
                  <TryCatch DisplayName="Try Catch 2nd Try CLEAN" sap:VirtualizedContainerService.HintSize="438,381" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                    <TryCatch.Try>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Confirms the Stage which the bot is supposed to start from in case of Crashes" DisplayName="Stage Confirmation CLEAN" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Process\StageConfirmation.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_ConfigPath">[io_Config("ConfigPath").ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Stage">CLEAN</InArgument>
                          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_Config">[io_Config]</InOutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Failed to Confirm CLEAN" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_5">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message Failed to Confirm CLEAN" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error" Message="[&quot;Failed to Update Stage to CLEAN. Final Attempt. &quot;+exception.Message+&quot; At source: &quot;+exception.Source]" />
                            <Rethrow DisplayName="Rethrow Failed to Confirm CLEAN" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                          </Sequence>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </Sequence>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </If.Then>
    </If>
    <ui:LogMessage DisplayName="Log Message Send Status Emails Finished" sap:VirtualizedContainerService.HintSize="713,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Sending Status Emails - Finished&quot;]" />
  </Sequence>
</Activity>